use ndarray::prelude::*;
pub mod game;

fn main() {
    let _num_runs = 1;
    //potential strategies for now are always defect, tit for tat, and grim trigger
    let _a_strat = "titfortat";
    let _b_strat = "grimtrigger";

    let a_mtx=arr2(&[[-1, -3],
                   [0, -2]]);

    let b_mtx=arr2(&[[-1, 0],
                   [-3, -2]]);
    //send this into a constructor for a Game type
    

    //once we have a Game, I'd like to know what its Nash Equilibrium is

    //run iterated some N times with strategy profiles specified for each player
    let mut g = game::Game{ 
        payoff_a: a_mtx,
        payoff_b: b_mtx,
        is_init: false};
    
    g.init_game(); 
    assert!(g.is_init);

    let p = g.turn_outcome(0,1);
    println!("Player A payoff: {}", p.0);
    println!("Player B payoff: {}", p.1);
}
